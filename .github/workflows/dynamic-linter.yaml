# This workflow was created using ChatGPT and the transcript can be viewed here: https://chatgpt.com/share/678d458d-ec88-8013-bede-9d7815d250af

name: Dynamic Linter Setup with Centralized Installation
on: [push, pull_request]

jobs:
  detect-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Fetch Linter Mapping
        run: |
          # Download the central mapping file
          curl -o linters.json https://raw.githubusercontent.com/Software-Engineering-Spring-2025/Homework-1/refs/heads/setup/srinivas-worfklow-setup/linters.json || echo '{}' > linters.json
          echo "Downloaded linter mapping (or created an empty fallback):"
          cat linters.json

      - name: Detect Languages
        run: |
          # Detect languages using GitHub Linguist or similar
          languages=$(github-linguist --json | jq -r 'keys[]')
          echo "Detected languages: $languages" > detected_languages.txt

      - name: Match Linters to Languages
        id: match_linters
        run: |
          selected_linters=""
          install_commands=""
          for lang in $(cat detected_languages.txt); do
            linter=$(jq -r --arg lang "$lang" '.[$lang].linter' linters.json)
            install_cmd=$(jq -r --arg lang "$lang" '.[$lang].install' linters.json)
            if [ "$linter" != "null" ]; then
              echo "Linter found for $lang: $linter"
              selected_linters="$selected_linters $linter"
              install_commands="$install_commands;$install_cmd"
            else
              echo "No linter configured for $lang. Skipping."
            fi
          done
          echo "linters=$selected_linters" >> $GITHUB_ENV
          echo "install_commands=$install_commands" >> $GITHUB_ENV

      - name: Install Linters
        run: |
          # Execute all the install commands from the mapping
          IFS=";" read -r -a commands <<< "${{ env.install_commands }}"
          for cmd in "${commands[@]}"; do
            if [ -n "$cmd" ]; then
              echo "Installing: $cmd"
              eval "$cmd"
            fi
          done

      - name: Run Linters
        run: |
          for linter in ${{ env.linters }}; do
            echo "Running $linter..."
            $linter || echo "$linter failed"
          done

